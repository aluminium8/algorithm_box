name: CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    env: 
      OpenCV_DIR: ${{ github.workspace }}/opencv/build/
      
    steps:

    - uses: actions/checkout@v3
    - name: now workspace check
      run: | 
        pwd
        ls -ashl

    - name: OpenCV cache restore
      id: cache-opencv
      uses: actions/cache@v3
      env:
        cache-name: cache-opencv
      with:
        path: ./opencv
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - if: ${{ steps.cache-opencv.outputs.cache-hit != 'true' }}
      name: OpenCV DL and build 
      run: | 
        git clone https://github.com/opencv/opencv.git
        cd /home/runner/work/algorithm_box/algorithm_box/opencv
        mkdir build
        cd build
        cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local ..
        make -j7 
        sudo make install
 
    - name: now workspace check
      run: | 
        pwd
        ls -ashl
        cd opencv
        ls 
        cd build 
        ls
    - name: test the github actions's behavior about cpp
      run: |
        cd test_code_for_test_environment
        clang++ main.cpp -o first_CICD_experience.out
        ./first_CICD_experience.out
        rm -f ./first_CICD_experience.out

    - name: test the github actions's behavior about make README
      run: |
        pwd
        
        cd test_code_for_test_environment
        pwd
        ls
        echo "# algorithm_box's CI CD test
        this README made by github actions
        # output from program
        " >README.md
        clang++ main.cpp -o first_CICD_experience.out
        ./first_CICD_experience.out>>README.md
        rm -f ./first_CICD_experience.out
        cd ../
        pwd

        git config --global user.name "${{github.actor}}"
        git config --global user.email "${{github.actor}}@users.noreply.github.com"
        git add ./test_code_for_test_environment/README.md
        git status
        git commit -m 'update README.md' || exit 0
        git push origin HEAD:main

    - name: build and run the cpp review project
      run: |
        pwd
        find ./ -name "OpenCVConfig.cmake"
        echo $OpenCV_DIR
        cd cpp/review_about_cpp
        pwd
        ls
        cat _readme_about_this_project.md > README.md
        cmake -S . -B build
        cmake --build build
        ./build/*.out >> README.md
        git config --global user.name "${{github.actor}}"
        git config --global user.email "${{github.actor}}@users.noreply.github.com"
        git add ./README.md
        git status
        git commit -m 'update README.md' || exit 0
        git push origin HEAD:main

        